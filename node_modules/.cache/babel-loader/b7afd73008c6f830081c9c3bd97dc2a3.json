{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Steve\\\\3D Objects\\\\Projet react\\\\flag\\\\src\\\\components\\\\Countries.js\",\n  _s = $RefreshSig$();\nimport { buildQueries } from '@testing-library/react';\nimport axios from 'axios';\nimport React, { useEffect, useState } from 'react';\nimport Card from './Card';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Countries = () => {\n  _s();\n  const [data, setData] = useState([]);\n  const [rangeValue, setRangeValue] = useState(36);\n  const [selectedRadio, setSelectedRadio] = useState(\"\");\n  const radios = [\"Africa\", \"America\", \"Asia\", \"Europe\", \"Oceania\"];\n  useEffect(() => {\n    axios.get(\"https://restcountries.com/v3.1/all\").then(res => setData(res.data)); /*Importe les données du site internet.*/\n  }, []);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"countries\",\n    children: [/*#__PURE__*/_jsxDEV(\"ul\", {\n      className: \"radio-container\",\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"range\",\n        min: \"1\",\n        max: \"250\",\n        defaultValue: rangeValue,\n        onChange: e => setRangeValue(e.target.value)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 20,\n        columnNumber: 9\n      }, this), radios.map(continent => /*#__PURE__*/_jsxDEV(\"li\", {\n        children: [/*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"radio\",\n          id: continent,\n          name: \"continentRadio\",\n          checked: continent === selectedRadio,\n          onChange: e => setSelectedRadio(e.target.id)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 23,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n          htmlFor: continent,\n          children: continent\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 24,\n          columnNumber: 17\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 22,\n        columnNumber: 13\n      }, this))]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 19,\n      columnNumber: 5\n    }, this), selectedRadio && /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: () => setSelectedRadio(\"\"),\n      children: \"Annuler la recherche\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 23\n    }, this), \" \", /*#__PURE__*/_jsxDEV(\"ul\", {\n      children: [data.filter(country => country.continents[0].includes(selectedRadio)) /* Permet de filtrer les éléments suivant le type radio sélectionner */.sort((a, b) => b.population - a.population).slice(0, rangeValue).map((country, index) => /*#__PURE__*/_jsxDEV(Card, {\n        country: country\n      }, index, false, {\n        fileName: _jsxFileName,\n        lineNumber: 33,\n        columnNumber: 52\n      }, this)), \" \"]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 5\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 18,\n    columnNumber: 1\n  }, this);\n};\n_s(Countries, \"hApykv1xOcjXy1cQQuBBsYlJm4g=\");\n_c = Countries;\nexport default Countries;\nvar _c;\n$RefreshReg$(_c, \"Countries\");","map":{"version":3,"names":["buildQueries","axios","React","useEffect","useState","Card","Countries","data","setData","rangeValue","setRangeValue","selectedRadio","setSelectedRadio","radios","get","then","res","e","target","value","map","continent","id","filter","country","continents","includes","sort","a","b","population","slice","index"],"sources":["C:/Users/Steve/3D Objects/Projet react/flag/src/components/Countries.js"],"sourcesContent":["import { buildQueries } from '@testing-library/react';\r\nimport axios from 'axios';\r\nimport React, { useEffect, useState } from 'react';\r\nimport Card from './Card';\r\n\r\nconst Countries = () => {\r\n\r\nconst [data, setData]=useState([]);\r\nconst [rangeValue, setRangeValue]=useState(36);\r\nconst [selectedRadio, setSelectedRadio]=useState(\"\");\r\nconst radios=[\"Africa\",\"America\",\"Asia\",\"Europe\",\"Oceania\"];\r\n\r\nuseEffect(() => {\r\naxios.get(\"https://restcountries.com/v3.1/all\").then((res)=>setData(res.data)); /*Importe les données du site internet.*/\r\n},[])\r\n\r\nreturn (\r\n<div className='countries'>\r\n    <ul className='radio-container'>\r\n        <input type=\"range\" min=\"1\" max=\"250\" defaultValue={rangeValue} onChange={(e)=>setRangeValue(e.target.value)}/>\r\n        {radios.map((continent)=>(\r\n            <li>\r\n                <input type=\"radio\" id={continent} name=\"continentRadio\" checked={continent === selectedRadio} onChange={(e)=> setSelectedRadio(e.target.id)}/>\r\n                <label htmlFor={continent}>{continent}</label>\r\n            </li>\r\n        ))}\r\n    </ul>\r\n    {selectedRadio && <button onClick={()=>setSelectedRadio(\"\")}>Annuler la recherche</button>} { /*Si l'input radio = true affiche le boutton et input=false si on appuie sur le boutton*/ }\r\n    <ul>\r\n        {data\r\n        .filter((country)=>country.continents[0].includes(selectedRadio)) /* Permet de filtrer les éléments suivant le type radio sélectionner */\r\n        .sort((a,b)=>b.population-a.population)\r\n        .slice(0,rangeValue).map((country,index)=>(<Card key={index} country={country}/>))} {/* Mets les données dans la balise, l'index permet de donner une id de chaque élément, map parcourt un tableau.*/}\r\n    </ul>        \r\n</div>\r\n);\r\n};\r\n\r\nexport default Countries;"],"mappings":";;AAAA,SAASA,YAAY,QAAQ,wBAAwB;AACrD,OAAOC,KAAK,MAAM,OAAO;AACzB,OAAOC,KAAK,IAAIC,SAAS,EAAEC,QAAQ,QAAQ,OAAO;AAClD,OAAOC,IAAI,MAAM,QAAQ;AAAC;AAE1B,MAAMC,SAAS,GAAG,MAAM;EAAA;EAExB,MAAM,CAACC,IAAI,EAAEC,OAAO,CAAC,GAACJ,QAAQ,CAAC,EAAE,CAAC;EAClC,MAAM,CAACK,UAAU,EAAEC,aAAa,CAAC,GAACN,QAAQ,CAAC,EAAE,CAAC;EAC9C,MAAM,CAACO,aAAa,EAAEC,gBAAgB,CAAC,GAACR,QAAQ,CAAC,EAAE,CAAC;EACpD,MAAMS,MAAM,GAAC,CAAC,QAAQ,EAAC,SAAS,EAAC,MAAM,EAAC,QAAQ,EAAC,SAAS,CAAC;EAE3DV,SAAS,CAAC,MAAM;IAChBF,KAAK,CAACa,GAAG,CAAC,oCAAoC,CAAC,CAACC,IAAI,CAAEC,GAAG,IAAGR,OAAO,CAACQ,GAAG,CAACT,IAAI,CAAC,CAAC,CAAC,CAAC;EAChF,CAAC,EAAC,EAAE,CAAC;EAEL,oBACA;IAAK,SAAS,EAAC,WAAW;IAAA,wBACtB;MAAI,SAAS,EAAC,iBAAiB;MAAA,wBAC3B;QAAO,IAAI,EAAC,OAAO;QAAC,GAAG,EAAC,GAAG;QAAC,GAAG,EAAC,KAAK;QAAC,YAAY,EAAEE,UAAW;QAAC,QAAQ,EAAGQ,CAAC,IAAGP,aAAa,CAACO,CAAC,CAACC,MAAM,CAACC,KAAK;MAAE;QAAA;QAAA;QAAA;MAAA,QAAE,EAC9GN,MAAM,CAACO,GAAG,CAAEC,SAAS,iBAClB;QAAA,wBACI;UAAO,IAAI,EAAC,OAAO;UAAC,EAAE,EAAEA,SAAU;UAAC,IAAI,EAAC,gBAAgB;UAAC,OAAO,EAAEA,SAAS,KAAKV,aAAc;UAAC,QAAQ,EAAGM,CAAC,IAAIL,gBAAgB,CAACK,CAAC,CAACC,MAAM,CAACI,EAAE;QAAE;UAAA;UAAA;UAAA;QAAA,QAAE,eAC/I;UAAO,OAAO,EAAED,SAAU;UAAA,UAAEA;QAAS;UAAA;UAAA;UAAA;QAAA,QAAS;MAAA;QAAA;QAAA;QAAA;MAAA,QAErD,CAAC;IAAA;MAAA;MAAA;MAAA;IAAA,QACD,EACJV,aAAa,iBAAI;MAAQ,OAAO,EAAE,MAAIC,gBAAgB,CAAC,EAAE,CAAE;MAAA;IAAA;MAAA;MAAA;MAAA;IAAA,QAA8B,oBAC1F;MAAA,WACKL,IAAI,CACJgB,MAAM,CAAEC,OAAO,IAAGA,OAAO,CAACC,UAAU,CAAC,CAAC,CAAC,CAACC,QAAQ,CAACf,aAAa,CAAC,CAAC,CAAC,wEACjEgB,IAAI,CAAC,CAACC,CAAC,EAACC,CAAC,KAAGA,CAAC,CAACC,UAAU,GAACF,CAAC,CAACE,UAAU,CAAC,CACtCC,KAAK,CAAC,CAAC,EAACtB,UAAU,CAAC,CAACW,GAAG,CAAC,CAACI,OAAO,EAACQ,KAAK,kBAAI,QAAC,IAAI;QAAa,OAAO,EAAER;MAAQ,GAAxBQ,KAAK;QAAA;QAAA;QAAA;MAAA,QAAsB,CAAC;IAAA;MAAA;MAAA;MAAA;IAAA,QACjF;EAAA;IAAA;IAAA;IAAA;EAAA,QACH;AAEN,CAAC;AAAC,GA/BI1B,SAAS;AAAA,KAATA,SAAS;AAiCf,eAAeA,SAAS;AAAC;AAAA"},"metadata":{},"sourceType":"module"}